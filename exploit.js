// exploit.js - Vers√£o com logs vis√≠veis diretamente na tela
document.body.innerHTML = `
  <div id="log" style="
    color: white; 
    background: black; 
    padding: 20px; 
    font-family: monospace;
    white-space: pre;
  ">Iniciando teste...</div>
`;

const logElement = document.getElementById('log');
let logData = '';

function log(msg) {
  logData += msg + '\n';
  logElement.textContent = logData;
  
  // Scroll autom√°tico para a √∫ltima linha
  logElement.scrollTop = logElement.scrollHeight;
}

// Fun√ß√£o modificada para for√ßar underflow
function foo(a, b, c) {
  let x = a | 0x80000000;
  let y = (b | 0) - 25;  // For√ßa underflow negativo
  let z = (c & 0x3F) + 64; // For√ßa overflow (32 bits)
  
  z = (x << y) ^ (x >> (32 - y));
  let r = z ^ 0xDEAD;
  let s = z ^ 0xBEEF;
  
  return ((x >>> r) << s) >> s;
}

// Teste em 2 etapas
function runTest() {
  try {
    // Etapa 1: Testes r√°pidos
    log('[ETAPA 1] Testes cr√≠ticos:');
    const tests = [
      [0x7FFFFFFF, -20, 0xFFFFFFFF], // M√°ximo underflow/overflow
      [100, -5, 0x7FFFFFFF],
      [0, -10, 0xFFFFFFFF]
    ];
    
    tests.forEach((args, i) => {
      const res = foo(...args);
      log(`Teste ${i+1}: ${res} (0x${(res >>> 0).toString(16)})`);
    });
    
    // Etapa 2: Loop curto com feedback
    log('\n[ETAPA 2] Loop de estresse:');
    const LEN = 5000; // Reduzido para PS4
    
    for(let i = 0; i <= LEN; i++) {
      const res = foo(
        i & 0xFF, 
        -15 + (i % 30), // Varia√ß√£o agressiva
        0x7FFFFFFF - (i % 100)
      );
      
      // Atualiza a cada 100 itera√ß√µes
      if (i % 100 === 0) {
        log(`Progresso: ${i}/${LEN} ‚Üí 0x${(res >>> 0).toString(16)}`);
      }
      
      // Verifica√ß√£o de anomalia
      if (res !== 0 && res !== -1) {
        log(`\nüî• ANOMALIA DETECTADA em i=${i}: 0x${(res >>> 0).toString(16)}`);
        break;
      }
    }
    
    log('\n‚úÖ Teste conclu√≠do');
  } catch(e) {
    log(`\nüí• CRASH: ${e.message}`);
  }
}

// Delay para garantir que a p√°gina carregue
setTimeout(runTest, 2000);
