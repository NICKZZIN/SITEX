// exploit.js - VersÃ£o com log persistente em localStorage
function log(msg) {
    // Salva mensagens mesmo se a pÃ¡gina crashar
    let logs = localStorage.getItem('exploit_log') || '';
    logs += msg + '\n';
    localStorage.setItem('exploit_log', logs);
}

function foo(a, b, c) {
    // ... (cÃ³digo original da funÃ§Ã£o foo)
}

// TESTE CONTROLADO
let testValues = [
    [100, -5, 0x7FFFFFFF],  // Caso extremo 1
    [0, -10, 0xFFFFFFFF],    // Caso extremo 2
    [127, 0, 15]             // Caso normal
];

try {
    testValues.forEach((args, i) => {
        let res = foo(...args);
        log(`Teste ${i+1}: ${args} â†’ ${res} (0x${res.toString(16)})`);
    });
    log("âœ… Fase 1 concluÃ­da");
    
    // Fase 2 - Loop reduzido
    for(let i = 0; i < 10000; i++) {
        let res = foo(i & 127, -5, 0x7FFFFFFF);
        if(res !== -1 && res !== 0) {
            log(`ðŸ”¥ ANOMALIA em i=${i}: 0x${res.toString(16)}`);
            break;
        }
    }
} catch(e) {
    log(`ðŸ’¥ CRASH: ${e.message}`);
}

// Recupera os logs apÃ³s recarregar (se nÃ£o tiver crashado)
alert(localStorage.getItem('exploit_log'));
